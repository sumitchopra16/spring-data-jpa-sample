# This property will add a column in table if you add a property in entity. or will delete a column or modify a colum
# as you modify a property in the entity class
# Possible values are following :
#   validate: validate the schema, makes no changes to the database.
#   update: update the schema.
#   create: creates the schema, destroying previous data.
#   create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
#   none: does nothing with the schema, makes no changes to the database
# hibernate generates columns in alphabetical order because :
#   It is sorted to ensurce deterministic ordering across clusters.
#   We can't rely on the vm to return the methods in the same order every time so we had to do something.
# There is no fix for this other than a workaround of naming the columns in such a way that they come out in the correct order
# Finally, I found the solution. (https://stackoverflow.com/questions/1298322/wrong-ordering-in-generated-table-in-jpa)
#   Find your External Libraries about hibernate core and find the org.hibernate.cfg.PropertyContainer class and copy the content.
#   In your root folder create the org.hibernate.cfg package and PropertyContainer.java.
#   Paste the org.hibernate.cfg.PropertyContainer content and replace all TreeMap to LinkedHashMap in your create PropertyContainer class.
#   Start the Spring Boot App. See the result in the console.
spring.jpa.hibernate.ddl-auto=update

spring.datasource.url=jdbc:mysql://localhost:3306/schooldb
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# To enable hibernate to print all the queries which are run in application by spring data jpa you have 2 options
# 1. set property spring.jpa.show-sql=true or set logging.level.org.hibernate.SQL=debug
spring.jpa.show-sql=true
#logging.level.org.hibernate.SQL=debug

# This property is used to pretty print the hibernate queries.
spring.jpa.properties.hibernate.format_sql=true

# When spring.jpa.show-sql=true hibernate will print all the queries it executes in the log. But it will not print the
# query parameters. for example: select * from table where name = ?, to enable hibernate to print the value for ? you need
# to set the following property. set logging.level.org.hibernate.type.descriptor.sql = trace.
# It will show the binding parameter as well as extracted value by the query.
logging.level.org.hibernate.type.descriptor.sql=trace


